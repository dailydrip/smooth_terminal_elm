-- Do not manually edit this file, it was auto-generated by Graphqelm
-- https://github.com/dillonkearns/graphqelm


module SmoothTerminal.Object.BlogPost exposing (..)

import Graphqelm.Field as Field exposing (Field)
import Graphqelm.Internal.Builder.Argument as Argument exposing (Argument)
import Graphqelm.Internal.Builder.Object as Object
import Graphqelm.Internal.Encode as Encode exposing (Value)
import Graphqelm.OptionalArgument exposing (OptionalArgument(Absent))
import Graphqelm.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import SmoothTerminal.InputObject
import SmoothTerminal.Interface
import SmoothTerminal.Object
import SmoothTerminal.Scalar
import SmoothTerminal.Union


{-| Select fields to build up a SelectionSet for this object.
-}
selection : (a -> constructor) -> SelectionSet (a -> constructor) SmoothTerminal.Object.BlogPost
selection constructor =
    Object.selection constructor


author : SelectionSet decodesTo SmoothTerminal.Object.Author -> Field (Maybe decodesTo) SmoothTerminal.Object.BlogPost
author object =
    Object.selectionField "author" [] object (identity >> Decode.nullable)


body : Field (Maybe String) SmoothTerminal.Object.BlogPost
body =
    Object.fieldDecoder "body" [] (Decode.string |> Decode.nullable)


canonicalUrl : Field (Maybe String) SmoothTerminal.Object.BlogPost
canonicalUrl =
    Object.fieldDecoder "canonicalUrl" [] (Decode.string |> Decode.nullable)


id : Field Int SmoothTerminal.Object.BlogPost
id =
    Object.fieldDecoder "id" [] Decode.int


publishedAt : Field (Maybe SmoothTerminal.Scalar.DateTime) SmoothTerminal.Object.BlogPost
publishedAt =
    Object.fieldDecoder "publishedAt" [] (Decode.oneOf [ Decode.string, Decode.float |> Decode.map toString, Decode.int |> Decode.map toString, Decode.bool |> Decode.map toString ] |> Decode.map SmoothTerminal.Scalar.DateTime |> Decode.nullable)


slug : Field (Maybe String) SmoothTerminal.Object.BlogPost
slug =
    Object.fieldDecoder "slug" [] (Decode.string |> Decode.nullable)


tags : SelectionSet decodesTo SmoothTerminal.Object.Tag -> Field (Maybe (List (Maybe decodesTo))) SmoothTerminal.Object.BlogPost
tags object =
    Object.selectionField "tags" [] object (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


title : Field (Maybe String) SmoothTerminal.Object.BlogPost
title =
    Object.fieldDecoder "title" [] (Decode.string |> Decode.nullable)
