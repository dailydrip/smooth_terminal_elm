-- Do not manually edit this file, it was auto-generated by Graphqelm
-- https://github.com/dillonkearns/graphqelm


module SmoothTerminal.Object.Drip exposing (..)

import Graphqelm.Field as Field exposing (Field)
import Graphqelm.Internal.Builder.Argument as Argument exposing (Argument)
import Graphqelm.Internal.Builder.Object as Object
import Graphqelm.Internal.Encode as Encode exposing (Value)
import Graphqelm.OptionalArgument exposing (OptionalArgument(Absent))
import Graphqelm.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import SmoothTerminal.InputObject
import SmoothTerminal.Interface
import SmoothTerminal.Object
import SmoothTerminal.Scalar
import SmoothTerminal.Union


{-| Select fields to build up a SelectionSet for this object.
-}
selection : (a -> constructor) -> SelectionSet (a -> constructor) SmoothTerminal.Object.Drip
selection constructor =
    Object.selection constructor


author : SelectionSet decodesTo SmoothTerminal.Object.Author -> Field (Maybe decodesTo) SmoothTerminal.Object.Drip
author object =
    Object.selectionField "author" [] object (identity >> Decode.nullable)


canonicalUrl : Field (Maybe String) SmoothTerminal.Object.Drip
canonicalUrl =
    Object.fieldDecoder "canonicalUrl" [] (Decode.string |> Decode.nullable)


description : Field (Maybe String) SmoothTerminal.Object.Drip
description =
    Object.fieldDecoder "description" [] (Decode.string |> Decode.nullable)


id : Field Int SmoothTerminal.Object.Drip
id =
    Object.fieldDecoder "id" [] Decode.int


identifier : Field (Maybe String) SmoothTerminal.Object.Drip
identifier =
    Object.fieldDecoder "identifier" [] (Decode.string |> Decode.nullable)


publishedAt : Field (Maybe SmoothTerminal.Scalar.DateTime) SmoothTerminal.Object.Drip
publishedAt =
    Object.fieldDecoder "publishedAt" [] (Decode.oneOf [ Decode.string, Decode.float |> Decode.map toString, Decode.int |> Decode.map toString, Decode.bool |> Decode.map toString ] |> Decode.map SmoothTerminal.Scalar.DateTime |> Decode.nullable)


screenshot : Field (Maybe String) SmoothTerminal.Object.Drip
screenshot =
    Object.fieldDecoder "screenshot" [] (Decode.string |> Decode.nullable)


slug : Field (Maybe String) SmoothTerminal.Object.Drip
slug =
    Object.fieldDecoder "slug" [] (Decode.string |> Decode.nullable)


tags : SelectionSet decodesTo SmoothTerminal.Object.Tag -> Field (Maybe (List (Maybe decodesTo))) SmoothTerminal.Object.Drip
tags object =
    Object.selectionField "tags" [] object (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


teaser : Field (Maybe String) SmoothTerminal.Object.Drip
teaser =
    Object.fieldDecoder "teaser" [] (Decode.string |> Decode.nullable)


title : Field (Maybe String) SmoothTerminal.Object.Drip
title =
    Object.fieldDecoder "title" [] (Decode.string |> Decode.nullable)


video : Field (Maybe String) SmoothTerminal.Object.Drip
video =
    Object.fieldDecoder "video" [] (Decode.string |> Decode.nullable)


videoLength : Field (Maybe Int) SmoothTerminal.Object.Drip
videoLength =
    Object.fieldDecoder "videoLength" [] (Decode.int |> Decode.nullable)
