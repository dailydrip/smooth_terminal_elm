-- Do not manually edit this file, it was auto-generated by Graphqelm
-- https://github.com/dillonkearns/graphqelm


module SmoothTerminal.Object.Author exposing (..)

import Graphqelm.Field as Field exposing (Field)
import Graphqelm.Internal.Builder.Argument as Argument exposing (Argument)
import Graphqelm.Internal.Builder.Object as Object
import Graphqelm.Internal.Encode as Encode exposing (Value)
import Graphqelm.OptionalArgument exposing (OptionalArgument(Absent))
import Graphqelm.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import SmoothTerminal.InputObject
import SmoothTerminal.Interface
import SmoothTerminal.Object
import SmoothTerminal.Scalar
import SmoothTerminal.Union


{-| Select fields to build up a SelectionSet for this object.
-}
selection : (a -> constructor) -> SelectionSet (a -> constructor) SmoothTerminal.Object.Author
selection constructor =
    Object.selection constructor


type alias ArticlesOptionalArguments =
    { page : OptionalArgument Int, perPage : OptionalArgument Int, tag : OptionalArgument String }


articles : (ArticlesOptionalArguments -> ArticlesOptionalArguments) -> SelectionSet decodesTo SmoothTerminal.Object.PaginatedArticles -> Field (Maybe decodesTo) SmoothTerminal.Object.Author
articles fillInOptionals object =
    let
        filledInOptionals =
            fillInOptionals { page = Absent, perPage = Absent, tag = Absent }

        optionalArgs =
            [ Argument.optional "page" filledInOptionals.page Encode.int, Argument.optional "perPage" filledInOptionals.perPage Encode.int, Argument.optional "tag" filledInOptionals.tag Encode.string ]
                |> List.filterMap identity
    in
    Object.selectionField "articles" optionalArgs object (identity >> Decode.nullable)


bio : Field (Maybe String) SmoothTerminal.Object.Author
bio =
    Object.fieldDecoder "bio" [] (Decode.string |> Decode.nullable)


email : Field (Maybe String) SmoothTerminal.Object.Author
email =
    Object.fieldDecoder "email" [] (Decode.string |> Decode.nullable)


github : Field (Maybe String) SmoothTerminal.Object.Author
github =
    Object.fieldDecoder "github" [] (Decode.string |> Decode.nullable)


id : Field Int SmoothTerminal.Object.Author
id =
    Object.fieldDecoder "id" [] Decode.int


name : Field (Maybe String) SmoothTerminal.Object.Author
name =
    Object.fieldDecoder "name" [] (Decode.string |> Decode.nullable)


twitter : Field (Maybe String) SmoothTerminal.Object.Author
twitter =
    Object.fieldDecoder "twitter" [] (Decode.string |> Decode.nullable)
