-- Do not manually edit this file, it was auto-generated by Graphqelm
-- https://github.com/dillonkearns/graphqelm


module SmoothTerminal.Object.Story exposing (..)

import Graphqelm.Field as Field exposing (Field)
import Graphqelm.Internal.Builder.Argument as Argument exposing (Argument)
import Graphqelm.Internal.Builder.Object as Object
import Graphqelm.Internal.Encode as Encode exposing (Value)
import Graphqelm.OptionalArgument exposing (OptionalArgument(Absent))
import Graphqelm.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import SmoothTerminal.InputObject
import SmoothTerminal.Interface
import SmoothTerminal.Object
import SmoothTerminal.Scalar
import SmoothTerminal.Union


{-| Select fields to build up a SelectionSet for this object.
-}
selection : (a -> constructor) -> SelectionSet (a -> constructor) SmoothTerminal.Object.Story
selection constructor =
    Object.selection constructor


author : SelectionSet decodesTo SmoothTerminal.Object.Author -> Field (Maybe decodesTo) SmoothTerminal.Object.Story
author object =
    Object.selectionField "author" [] object (identity >> Decode.nullable)


comments : SelectionSet decodesTo SmoothTerminal.Object.FirestormPost -> Field (Maybe (List (Maybe decodesTo))) SmoothTerminal.Object.Story
comments object =
    Object.selectionField "comments" [] object (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


commentsThread : SelectionSet decodesTo SmoothTerminal.Object.FirestormThread -> Field (Maybe decodesTo) SmoothTerminal.Object.Story
commentsThread object =
    Object.selectionField "commentsThread" [] object (identity >> Decode.nullable)


id : Field Int SmoothTerminal.Object.Story
id =
    Object.fieldDecoder "id" [] Decode.int


newsStory : Field (Maybe String) SmoothTerminal.Object.Story
newsStory =
    Object.fieldDecoder "newsStory" [] (Decode.string |> Decode.nullable)


publishedAt : Field (Maybe SmoothTerminal.Scalar.DateTime) SmoothTerminal.Object.Story
publishedAt =
    Object.fieldDecoder "publishedAt" [] (Decode.oneOf [ Decode.string, Decode.float |> Decode.map toString, Decode.int |> Decode.map toString, Decode.bool |> Decode.map toString ] |> Decode.map SmoothTerminal.Scalar.DateTime |> Decode.nullable)


slug : Field (Maybe String) SmoothTerminal.Object.Story
slug =
    Object.fieldDecoder "slug" [] (Decode.string |> Decode.nullable)


tags : SelectionSet decodesTo SmoothTerminal.Object.Tag -> Field (Maybe (List (Maybe decodesTo))) SmoothTerminal.Object.Story
tags object =
    Object.selectionField "tags" [] object (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


title : Field (Maybe String) SmoothTerminal.Object.Story
title =
    Object.fieldDecoder "title" [] (Decode.string |> Decode.nullable)


uid : Field (Maybe String) SmoothTerminal.Object.Story
uid =
    Object.fieldDecoder "uid" [] (Decode.string |> Decode.nullable)
